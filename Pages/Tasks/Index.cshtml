@page
@model TaskManagementApp.Pages.Tasks.IndexModel

@{
    ViewData["Title"] = "Lista de Tareas";
}

<h1 class="mt-3 text-center">@ViewData["Title"]</h1>

<div class="mb-3">
    <a class="btn btn-success" asp-page="Create"> <i class="fa-solid fa-square-plus"></i> Crear Nueva Tarea</a>
    <a class="btn btn-secondary" asp-page="Index" asp-route-pageNumber="@(Model.PageNumber)" asp-route-showCompleted="@(ViewData["ShowCompleted"] != null && (bool)ViewData["ShowCompleted"] ? "false" : "true")">
        <i class="fa-solid @(ViewData["ShowCompleted"] != null && (bool)ViewData["ShowCompleted"] ? "fa-eye-slash" : "fa-eye")"></i>
        @(ViewData["ShowCompleted"] != null && (bool)ViewData["ShowCompleted"] ? " Ocultar Completadas" : " Mostrar Completadas")
    </a>
</div>

<div class="input-group mb-4 mt-3">
    <input type="text" id="search-input" class="form-control" placeholder="Buscar tareas...">
</div>

<div style="visibility: hidden;">
    <input type="hidden" name="__RequestVerificationToken" value="@Html.AntiForgeryToken()" />
</div>

<div class="table-responsive">
    <table id="task-table" class="table table-striped table-bordered border-success text-white bg-dark">
        <thead class="text-center table-dark">
            <tr>
                <th>Título</th>
                <th>Fecha de Vencimiento</th>
                <th>Asignado a</th>
                <th>Estado</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody class="text-center">
            @foreach (var item in Model.TaskItems)
            {
                <tr class="@(item.TaskItem.Completada ? "table-success" : "")">
                    <td>@Html.DisplayFor(modelItem => item.TaskItem.Titulo)</td>
                    <td>@String.Format("{0:dd/MM/yyyy}", item.TaskItem.FechaVencimiento)</td>
                    <td>@item.UsuarioEmail</td>
                    <td>
                        <input type="checkbox" class="toggle-completed" data-id="@item.TaskItem.Id" @(item.TaskItem.Completada ? "checked" : "") />
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.TaskItem.Id" title="Editar" class="btn btn-info text-white"><i class="fa-solid fa-file-pen"></i></a>
                        <a asp-page="./Details" asp-route-id="@item.TaskItem.Id" title="Ver Detalles" class="btn btn-warning ml-2 mr-2 text-white"><i class="fa-solid fa-circle-info"></i></a>
                        <a asp-page="./Delete" asp-route-id="@item.TaskItem.Id" title="Eliminar" class="btn btn-danger text-white"><i class="fa-solid fa-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Paginación -->
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
            <a class="page-link" asp-page="./Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-showCompleted="@(ViewData["ShowCompleted"] ?? false)" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
        </li>
        @for (var i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                <a class="page-link" asp-page="./Index" asp-route-pageNumber="@i" asp-route-showCompleted="@(ViewData["ShowCompleted"] ?? false)">@i</a>
            </li>
        }
        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" asp-page="./Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-showCompleted="@(ViewData["ShowCompleted"] ?? false)" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>
    </ul>
</nav>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Obtener el token antifalsificación de la meta etiqueta
        var antiForgeryToken = $('input[name="__RequestVerificationToken"]').val();

        // Manejar el cambio del checkbox para marcar/desmarcar como completada
        $('.toggle-completed').change(function () {
            var checkbox = $(this);
            var taskId = checkbox.data('id');

            $.ajax({
                url: '/Tasks/Index?handler=ToggleCompleted',
                type: 'POST',
                headers: {
                    'RequestVerificationToken': antiForgeryToken
                },
                data: {
                    id: taskId
                },
                success: function (response) {
                    if (response.success) {
                        // Actualizar la fila de la tarea
                        var row = checkbox.closest('tr');
                        if (response.completada) {
                            row.addClass('table-success');
                            checkbox.prop('checked', true);
                        } else {
                            row.removeClass('table-success');
                            checkbox.prop('checked', false);
                        }
                        console.log('Status updated successfully.');
                    } else {
                        console.error('Error:', response.message);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error updating status:', error);
                }
            });
        });

        // Búsqueda en vivo
        $("#search-input").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#task-table tbody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });
    });
</script>
